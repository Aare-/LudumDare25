package pl.subfty.sub.vision.stage.actors;

import aurelienribon.tweenengine.TweenAccessor;

import com.badlogic.gdx.scenes.scene2d.Actor;

public class ActorAccessor implements TweenAccessor<Actor>{

	public final static int POS_X=0,
							POS_Y=1,
							POS_XY=2,
							SCALE_XY=3,
							ALPHA=4,
							SIZE_WH=5,
							SIZE_H=6,
							SIZE_W=7,
							ROTATION=8;
	@Override
	public int getValues(Actor target, int type, float[] val) {
		
		switch(type){
		case POS_X:
			val[0] = target.getX();
			return 1;
		case POS_Y:
			val[0] = target.getY();
			return 1;
		case POS_XY:
			val[0] = target.getX();
			val[1] = target.getY();
			return 2;
		case SCALE_XY:
			val[0] = target.getScaleX();
			val[1] = target.getScaleY();
			return 2;
		case ALPHA:
			val[0] = target.getColor().a;
			return 1;
		case SIZE_WH:
			val[0] = target.getWidth();
			val[1] = target.getHeight();
			return 2;
		case SIZE_W:
			val[0] = target.getWidth();
			return 1;
		case SIZE_H:
			val[0] = target.getHeight();
			return 1;
		case ROTATION:
			val[0] = target.getRotation();
			return 1;
		}
		
		return 0;
	}

	@Override
	public void setValues(Actor target, int type, float[] val) {
		switch(type){
		case POS_X:
			target.setX(val[0]);
			break;
		case POS_Y:
			target.setY(val[0]);
			break;
		case POS_XY:
			target.setPosition(val[0], val[1]);
			break;
		case SCALE_XY:
			target.setScale(val[0], val[1]);
			break;
		case ALPHA:
			target.getColor().a = val[0];
			break;
		case SIZE_WH:
			target.setSize(val[0], val[1]);
			break;
		case SIZE_W:
			target.setWidth(val[0]);
			break;
		case SIZE_H:
			target.setHeight(val[0]);
			break;
		case ROTATION:
			target.setRotation(val[0]);
			break;
		}
	}
}
